package fr.ubx.poo.model;

import fr.ubx.poo.model.go.character.Player;
import fr.ubx.poo.view.sprite.SpritePlayer;

import java.util.TimerTask;


// Handles both Player's invulnerability, and his Sprite's blinking

public class InvulnerabilityTimer extends TimerTask {

    Player linkedPlayer;
    SpritePlayer linkedSprite;





    // ------------------ CONSTRUCTEUR ------------------ //

    public InvulnerabilityTimer(Player player){
        linkedPlayer = player;
        linkedSprite = null;
    }

    public InvulnerabilityTimer(SpritePlayer sprite){
        linkedSprite = sprite;
        linkedPlayer = null;
    }





    // ------------------ METHODES PUBLIQUES ------------------ //

    @Override
    public void run() {
        if(linkedPlayer != null){                                // If a Player object is linked...
            this.linkedPlayer.setVulnerabilityStatus(false);    // After a 1sec delay, removes invulnerability status.
            linkedPlayer.endTimer();
        }
        else{                                                    // If a SpritePlayer is linked...
            if(linkedSprite.getBrightness() == (double) 0 ){    // Make it blink. Interval set in Player.java
                linkedSprite.setBrightness(1);
            }else{
                linkedSprite.setBrightness(0);
            }
        }
    }
}
